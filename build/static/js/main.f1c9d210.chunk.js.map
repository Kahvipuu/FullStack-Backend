{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Filter","props","console","log","nameFilter","handleFilterChange","value","onChange","SubmitForm","onSubmit","addName","newName","handleNewNameChange","newNumber","handleNewNumberChange","type","ShowNumbers","persons","numbersToFilter","numberFilter","map","person","name","number","onClick","removeName","Notification","message","success","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","setSuccess","useEffect","personService","then","response","data","event","target","preventDefault","findName","inBook","allreadyInBook","window","confirm","idToChange","find","changedPerson","n","setTimeout","p","catch","filter","concat","personOld","length","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1c9d210.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n}","import React, { useEffect, useState } from 'react'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Filter = (props) => {\n  console.log('filter:', props.nameFilter, 'handler', props.handleFilterChange)\n  return (\n    <div>\n      <form>\n        filter: <input\n          value={props.nameFilter}\n          onChange={props.handleFilterChange}\n        ></input>\n      </form>\n    </div>\n  )\n}\n\nconst SubmitForm = (props) => {\n  //Varmaan tästä toivottaisiin jotain hieman paremmin jaoteltua kokonaisuutta...\n  console.log('subForm', props);\n  return (\n    <div>\n      <form onSubmit={props.addName}>\n        Name: <input\n          value={props.newName}\n          onChange={props.handleNewNameChange}\n        ></input>\n        Number: <input\n          value={props.newNumber}\n          onChange={props.handleNewNumberChange}\n        ></input>\n        <button type=\"submit\">add</button>\n      </form>\n    </div>\n  )\n}\n\nconst ShowNumbers = (props) => {\n  /* miksi täällä täytyy olla numberFilter() aaltosulkeilla,\n   mutta ylempänä SubmitFormissa ei handleissa tarvitse?? (tai ei pidä olla) --ilmeisesti event vs funktio */\n  console.log('ShowNum', props, 'ShowNum-persons', props.persons, 'ShowNum-nameFilt', props.nameFilter)\n  const numbersToFilter = props.numberFilter()\n  console.log('showNumFilter', numbersToFilter);\n  return (\n    <ul>\n      {numbersToFilter.map(person => {\n        return (\n          <div key={person.id}>\n            <li > {person.name} {person.number} </li>\n            <button onClick={() => props.removeName(person)} >remove </button>\n          </div>\n        )\n      })}\n    </ul>\n  )\n}\n\nconst Notification = ({ message, success }) => {\n  if (message === null) {\n    return null\n  }\n  if (success) {\n    return (\n      <div className='success'>\n        {message}\n      </div>\n    )\n  } else {\n    return (\n      <div className='error'>\n        {message}\n      </div>\n    )\n  }\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    /*    { name: 'Arto Hellas', number: '0401231244', id: 1 },\n        { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },\n        { name: 'Dan Abramov', number: '12-43-234345', id: 3 },\n        { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }\n        */\n  ])\n  const [newName, setNewName] = useState('add new name')\n  const [newNumber, setNewNumber] = useState('add new Number')\n  const [nameFilter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState('testi')\n  const [success, setSuccess] = useState(true)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        console.log('1.datahaku', response.data);\n        setPersons(response.data)\n      })\n  }, [])\n\n  const allreadyInBook = () => {\n    let inBook = false\n    persons.map(person => {\n      // ja tästä toivottavasti muistamme miten funktiota kutsutaan.......\n      console.log('Nimi:', person.name, 'newname', newName)\n      console.log('ehto:', person.name === newName)\n      if (person.name === newName) {\n        inBook = true\n      }\n    })\n    return inBook\n  }\n\n  const getIdForName = (findName) => {\n    const p = persons.find(person =>\n      person.name === findName\n    )\n    return p.id\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const newObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (allreadyInBook()) {\n      if (window.confirm(`${newObject.newName} is already in the phonebook, \n      do you wish to replace the old number?`)) {\n        const idToChange = getIdForName(newName)\n        const changedPerson = { ...(persons.find(n => n.name === newName)), number: newNumber }\n        personService\n          .update(idToChange, changedPerson)\n          .then(response => {\n            setSuccess(true)\n            setErrorMessage(`Number for ${newName} replaced`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 3000\n            )\n            setPersons(persons.map(p => p.id !== idToChange ? p : response.data))\n          })\n          .catch( () => {\n            setSuccess(false)\n            setErrorMessage(`Information has been deleted from the server, can't update ${newName}`)\n            setPersons(persons.filter(p => (p.id !== idToChange) ))\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 3000\n            )\n          }\n          )\n      }\n    } else {\n      personService\n        .create(newObject)\n        .then(response => {\n          setSuccess(true)\n          setErrorMessage(`Added number for ${newName}`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000\n          )\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n\n  const removeName = (person) => {\n    console.log('removeName event', person)\n    if (window.confirm(`Remove ${person.name}`)) {\n      personService\n        .remove(person.id)\n        .then(() => {\n          setSuccess(true)\n          setErrorMessage(`Removed ${person.name}`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000\n          )\n          setPersons(\n            persons.filter(personOld =>\n              (personOld.id !== person.id)\n            )\n          )\n        }\n        )\n    }\n    /*   tää ei oikein toiminu, ehkä promise ongelma... \n    oli vielä \"pending\" kun kaatui .map ei ole funkkari virheeseen \n    setPersons(personService\n          .getAll()\n          .then(response => { setPersons(response.data) })\n        ) */\n  }\n\n  const handleNewNameChange = (event) => {\n    /*    console.log('value: ', event.target.value)\n        console.log('Name handler: ', event)\n    */\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log('handleFilth', event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const numberFilter = () => {\n    console.log('NumFilter-persons', persons, 'NumFilter-nameFilt', nameFilter)\n    if (nameFilter.length === 0) {\n      return persons\n    }\n    return persons.filter(person => person.name.toLocaleLowerCase().includes(nameFilter.toLocaleLowerCase()))\n    // ja nyt on näköjään vaikea tajuta että funktiosta voisi jotain palauttaakin..\n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} success={success} />\n      <h2>Phonebook</h2>\n      <Filter nameFilter={nameFilter} handleFilterChange={handleFilterChange} />\n      <h2>add a new number</h2>\n      <SubmitForm addName={addName} newName={newName} newNumber={newNumber}\n        handleNewNameChange={handleNewNameChange} handleNewNumberChange={handleNewNumberChange} />\n      <h2>Numbers</h2>\n      <ShowNumbers removeName={removeName} persons={persons} nameFilter={nameFilter} numberFilter={numberFilter} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}